-- Database and tables construction
CREATE DATABASE IF NOT EXISTS cs360_HOEP;
USE cs360_HOEP;
CREATE TABLE IF NOT EXISTS UNIVERSITY (
	UID INT PRIMARY KEY,
	Name VARCHAR(100) NOT NULL,
	Country_id VARCHAR(5),
	Language_id VARCHAR(5),
	Available_number INT NOT NULL,
	Undergraduate INT NOT NULL,
	Graduate INT NOT NULL,
	RID INT NOT NULL,
	Region VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS FORMER_EXCHANGE (
	UID INT,
	Univ_name VARCHAR(100) NOT NULL,
	Name VARCHAR(30),
	Post_date Date NOT NULL,
	URL VARCHAR(500) NOT NULL,
	PRIMARY KEY(UID, Name)
);

CREATE TABLE IF NOT EXISTS KAIST_DEPT (
	DID INT PRIMARY KEY,
	Name VARCHAR(100) NOT NULL
);

CREATE TABLE IF NOT EXISTS HAS_TRACK (
	UID INT,
	Univ_name VARCHAR(100) NOT NULL,
	DID INT,
	KAIST_dept VARCHAR(100) NOT NULL,
	Univ_track VARCHAR(100) NOT NULL,
	PRIMARY KEY(UID, DID, Univ_track)
);

CREATE TABLE IF NOT EXISTS IO_COORDINATOR (
	CID INT PRIMARY KEY,
	Name VARCHAR(30) NOT NULL,
	Position VARCHAR(100) NOT NULL,
	Tel VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS REGION (
	RID INT PRIMARY KEY,
	Region VARCHAR(30) NOT NULL,
	KAIST_scholarship INT NOT NULL,
	CID INT NOT NULL,
	IO_Cname VARCHAR(30) NOT NULL
);

CREATE TABLE IF NOT EXISTS LANGUAGE_CERTIFICATE (
	UID INT,
	Univ_name VARCHAR(100) NOT NULL,
	Type VARCHAR(10),
	Language_id VARCHAR(2),
	Requisite VARCHAR(5) NOT NULL,
	PRIMARY KEY (UID, Type, Language_id)
);

LOAD DATA INFILE 'C:/CS360-HOEP-Project/csv_data/UNIVERSITY.csv'
INTO TABLE UNIVERSITY
FIELDS TERMINATED BY ','
ignore 1 lines;

LOAD DATA INFILE 'C:/CS360-HOEP-Project/csv_data/FORMER_EXCHANGE.csv'
INTO TABLE FORMER_EXCHANGE
FIELDS TERMINATED BY ','
ignore 1 lines;

LOAD DATA INFILE 'C:/CS360-HOEP-Project/csv_data/KAIST_DEPT.csv'
INTO TABLE KAIST_DEPT
FIELDS TERMINATED BY ','
ignore 1 lines;

LOAD DATA INFILE 'C:/CS360-HOEP-Project/csv_data/HAS_TRACK.csv'
INTO TABLE HAS_TRACK
FIELDS TERMINATED BY ','
ignore 1 lines;

LOAD DATA INFILE 'C:/CS360-HOEP-Project/csv_data/IO_COORDINATOR.csv'
INTO TABLE IO_COORDINATOR
FIELDS TERMINATED BY ','
ignore 1 lines;

LOAD DATA INFILE 'C:/CS360-HOEP-Project/csv_data/REGION.csv'
INTO TABLE REGION
FIELDS TERMINATED BY ','
ignore 1 lines;

LOAD DATA INFILE 'C:/CS360-HOEP-Project/csv_data/LANGUAGE_CERTIFICATE.csv'
INTO TABLE LANGUAGE_CERTIFICATE
FIELDS TERMINATED BY ','
ignore 1 lines;

# DID and RID 받아서, 사용자가 원하는 학교 찾기 (Simplest ver)
CREATE VIEW REQUEST1 AS
SELECT A.UID, A.DID, A.Univ_track, B.RID, B.Name
FROM HAS_TRACK AS A
JOIN UNIVERSITY AS B USING(UID);



DROP VIEW IF EXISTS REGION_COORD, UNIV_REGION, KAISTDEP_HASTRACK, UNIV_REGION_DEPARTMENT, RESULT_VIEW;

# REGION 과 IO_COORDINATOR 연결 (CID 제거)
CREATE VIEW REGION_COORD AS
SELECT REGION.RID, REGION.Region, REGION.KAIST_scholarship, IO_COORDINATOR.NAME, IO_COORDINATOR.Tel
FROM REGION JOIN IO_COORDINATOR ON REGION.CID = IO_COORDINATOR.CID;


# UNIVERSITY랑 REGION_COORD 순서로 JOIN 하는게 나을 듯. 그리고, 굳이 필요 없을 것 같은데? University column만 가져오고 있으니까
CREATE VIEW UNIV_REGION AS
SELECT UNIVERSITY.UID, UNIVERSITY.RID, UNIVERSITY.Region, UNIVERSITY.Name, Country_id, Language_id,
Available_number, Undergraduate, Graduate
FROM REGION_COORD JOIN UNIVERSITY ON UNIVERSITY.RID = REGION_COORD.RID;


# 필요 없을 듯? HAS_TRACK 자체에 원하는 정보 모두 있음
CREATE VIEW KAISTDEP_HASTRACK AS
SELECT UID, KAIST_DEPT.DID, KAIST_DEPT.Name
FROM KAIST_DEPT JOIN HAS_TRACK ON KAIST_DEPT.DID = HAS_TRACK.DID;


CREATE VIEW UNIV_REGION_DEPARTMENT AS
SELECT UNIV_REGION.UID, RID, UNIV_REGION.Name, Region, DID, KAISTDEP_HASTRACK.Name as Dept, Language_id,
Available_number, Undergraduate, Graduate
FROM UNIV_REGION JOIN KAISTDEP_HASTRACK ON UNIV_REGION.UID = KAISTDEP_HASTRACK.UID;

CREATE VIEW RESULT_VIEW AS
SELECT RID, DID, Univ_name, Region, Dept, Language_id, Available_number, Undergraduate,
Graduate, URL
FROM UNIV_REGION_DEPARTMENT JOIN FORMER_EXCHANGE ON UNIV_REGION_DEPARTMENT.UID = FORMER_EXCHANGE.UID;


CREATE USER 'tester'@'localhost' IDENTIFIED BY '1234';
GRANT ALL PRIVILEGES ON cs360_HOEP.* TO 'tester'@'localhost';